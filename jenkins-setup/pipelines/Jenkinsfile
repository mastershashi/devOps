pipeline {
  
  agent {
    docker {
      image 'python:3.11-slim'
      args '-v /var/run/docker.sock:/var/run/docker.sock'  // so Docker works too
    }
  }
  environment {
    APP_NAME     = "patient-app"
    DOCKER_USER  = "shashitraining"
    DOCKER_IMAGE = "${DOCKER_USER}/${APP_NAME}"
    DOCKER_TAG   = "${env.BUILD_NUMBER}"   // or "latest" if you prefer
    APP_DIR      = "logging"
  }

  stages {
    stage('Build') {
      steps {
        echo "‚úÖ Building Flask app..."
        sh "python3 -m py_compile $APP_DIR/patient.py"
      }
    }

    stage('Test') {
      steps {
        echo "üß™ Running tests..."
        sh "echo 'No tests yet - add pytest later'"
      }
    }

    stage('Docker Build') {
      steps {
        script {
          echo "üê≥ Building Docker image $DOCKER_IMAGE:$DOCKER_TAG"
          sh "docker build -t $DOCKER_IMAGE:$DOCKER_TAG $APP_DIR"
        }
      }
    }

    stage('Push to Docker Hub') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh """
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $DOCKER_IMAGE:$DOCKER_TAG
            docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest
            docker push $DOCKER_IMAGE:latest
          """
        }
      }
    }
  }
}
